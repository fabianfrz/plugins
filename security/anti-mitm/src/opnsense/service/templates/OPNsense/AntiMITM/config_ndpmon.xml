{% if helpers.exists('OPNsense.anti_mitm.NDPMon.enabled') and OPNsense.anti_mitm.NDPMon.enabled == '1' %}
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config_ndpmon SYSTEM "/usr/local/share/ndpmon/config_ndpmon.dtd">
<?xml-stylesheet type="text/xsl" href="config.xsl" ?>
<config_ndpmon>
    <!-- 
    <actions_high_priority sendmail="1" syslog="1" exec_pipe_program="/usr/local/ndpmon/alerts_to_xml.py"/>
    <actions_low_priority sendmail="1" syslog="1" exec_pipe_program="/usr/local/ndpmon/alerts_to_xml.py"/>
    -->
    <actions_high_pri>
      <sendmail>{{ OPNsense.anti_mitm.NDPMon.high_priority_sendmail|default("0") }}</sendmail>
      <syslog>{{ OPNsense.anti_mitm.NDPMon.high_priority_syslog|default("0") }}</syslog>
      <exec_pipe_program />
    </actions_high_pri>
    <actions_low_pri>
      <sendmail>{{ OPNsense.anti_mitm.NDPMon.low_priority_sendmail|default("0") }}</sendmail>
      <syslog>{{ OPNsense.anti_mitm.NDPMon.low_priority_syslog|default("0") }}</syslog>
      <exec_pipe_program />
    </actions_low_pri>
    <admin_mail>{{ OPNsense.anti_mitm.NDPMon.admin_mail|default("root@localhost") }}</admin_mail>
    <ignor_autoconf>{{ OPNsense.anti_mitm.NDPMon.ignore_autoconf|default("1") }}</ignor_autoconf>
    <syslog_facility>LOG_LOCAL1</syslog_facility>
    <use_reverse_hostlookups>{{ OPNsense.anti_mitm.NDPMon.reverse_hostlookups|default("0") }}</use_reverse_hostlookups>

    <routers>
{%     for router in helpers.toList('OPNsense.anti_mitm.NDPMon.router') %}

      <router>
        <mac>{{ router.mac }}</mac>
        <lla>{{ router.lla }}</lla>
{% if router.curhoplimit and router.curhoplimit != '' %}
        <param_curhoplimit>{{ router.curhoplimit }}</param_curhoplimit>
{% endif %}
{% if router.flags_reserved and router.flags_reserved != '' %}
        <param_flags_reserved>{{ router.flags_reserved }}</param_flags_reserved>
{% endif %}
{% if router.lifetime and router.lifetime != '' %}
        <param_router_lifetime>{{ router.lifetime }}</param_router_lifetime>
{% endif %}
{% if router.reachable_timer and router.reachable_timer != '' %}
        <param_reachable_timer>{{ router.reachable_timer }}</param_reachable_timer>
{% endif %}
{% if router.retrans_timer and router.retrans_timer != '' %}
        <param_retrans_timer>{{ router.retrans_timer }}</param_retrans_timer>
{% endif %}
{% if router.mtu and router.mtu != '' %}
        <param_mtu>{{ router.mtu }}</param_mtu>
{% endif %}
{% if router.volatile and router.volatile != '' %}
        <params_volatile>{{ router.volatile }}</params_volatile>
{% endif %}
        <addresses />
        <prefixes>
{%        for prefix in helpers.toList('OPNsense.anti_mitm.NDPMon.prefix') %}
{%          set router2 = helpers.getUUID(prefix.router) %}
{%          if router2.name == router.name %}
          <prefix>
            <address>{{ prefix.address }}</address>
            <mask>{{ prefix.mask}}</mask>
{%            if prefix.flags_reserved and prefix.flags_reserved != '' %}
            <param_flags_reserved>{{ prefix.flags_reserved }}</param_flags_reserved>
{%            endif %}
{%            if prefix.valid_time and prefix.valid_time != '' %}
            <param_valid_time>{{ prefix.valid_time }}</param_valid_time>
{%            endif %}
{%            if prefix.preferred_time and prefix.preferred_time != '' %}
            <param_preferred_time>{{ prefix.preferred_time }}</param_preferred_time>
{%            endif %}
          </prefix>
{%          endif %}
{%        endfor %}
        </prefixes>
      </router>
{%    endfor %}
    </routers>
    <!-- Example Rules Configuration 
    <rules>
      <rule description="inet6.source is link local">
        <match field="inet6.source" value="fe80::/10"/>
      </rule>
    </rules>
    -->
</config_ndpmon>
{% endif %}
